#
# Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
#
title: WebLogic on Oracle Cloud Infrastructure Container Engine for Kubernetes
description: WebLogic on Oracle Cloud Infrastructure Container Engine for Kubernetes
schemaVersion: 1.1.0
version: "20190404"

groupings:
  - title: "WebLogic Server on Container Cluster (OKE)"
    variables:
      - ${resource_prefix}
      - ${ssh_public_key}
      - ${wls_ms_replica_count}
      - ${wls_admin_user}
      - ${wls_admin_password_ocid}

  - title: "WebLogic Server Advanced Configuration"
    variables:
      - ${use_advanced_wls_instance_config}
      - ${wls_domain_name}
      - ${wls_admin_port}

  - title: "Container Cluster (OKE) Configuration"
    variables:
      - ${kubernetes_version}
      - ${wls_node_pool_shape}
      - ${wls_node_pool_count}
      - ${non_wls_node_pool_shape}
      - ${non_wls_node_pool_count}
      - ${pods_cidr}
      - ${services_cidr}
      - ${use_encryption}
      - ${vault_key_ocid}

  - title: "Container Cluster (OKE) Administration Instances"
    variables:
      - ${admin_availability_domain}
      - ${admin_shape}
      - ${bastion_shape}

  - title: "Network"
    variables:
      - ${network_compartment_id}
      - ${vcn_strategy}
      - ${vcn_cidr}
      - ${existing_vcn_id}
      - ${use_existing_subnets}
      - ${bastion_subnet_cidr}
      - ${existing_bastion_subnet_id}
      - ${admin_subnet_cidr}
      - ${existing_admin_subnet_id}
      - ${fss_subnet_cidr}
      - ${existing_fss_subnet_id}
      - ${oke_workers_subnet_cidr}
      - ${existing_oke_workers_subnet_id}
      - ${lb_subnet_cidr}
      - ${existing_lb_subnet_id}
      - ${existing_nat_gw_id}
      - ${existing_service_gw_id}
      - ${ingress_lb_shape}
      - ${lb_shape}

  - title: "Provision with JRF"
    visible: true
    variables:
      - ${add_JRF}

  - title: "Database"
    visible: ${add_JRF}
    variables:
      - ${db_strategy_existing_vcn}
      - ${db_strategy_new_vcn}
      - ${atp_db_compartment_id}
      - ${atp_db_id}
      - ${atp_db_password_ocid}
      - ${atp_db_level}
#      - ${ocidb_network_compartment_id}
#      - ${ocidb_existing_vcn_id}
      - ${ocidb_compartment_id}
      - ${ocidb_dbsystem_id}
      - ${ocidb_dbhome_id}
      - ${ocidb_dbhome_major_version}
      - ${ocidb_database_id}
      - ${ocidb_pdb_service_name}
      - ${oci_db_user}
      - ${oci_db_password_ocid}
      - ${db_port}

  - title: "File System"
    variables:
      - ${fss_availability_domain}
      - ${mountTarget_id}
      - ${mountTarget_compartment_id}

  - title: "Registry (OCIR)"
    variables:
      - ${ocir_user}
      - ${ocir_auth_token_ocid}

  - title: "OCI Policies"
    visible: ${orm_create_mode}
    variables:
      - ${create_policies}

  - title: "Hidden Variables"
    visible: false
    variables:
      - ${tenancy_ocid}
      - ${region}
      - ${user_id}
      - ${fingerprint}
      - ${private_key_path}
      - ${compartment_ocid}
      - ${use_bastion_marketplace_image}
      - ${use_admin_marketplace_image}
      - ${use_nodepool_marketplace_image}
      - ${bastion_image_id}
      - ${admin_image_id}
      - ${marketplace_source_images}
      - ${mp_wls_node_pool_image_id}
      - ${mp_baselinux_listing_id}
      - ${mp_baselinux_listing_resource_version}
      - ${mode}
      - ${assign_admin_public_ip}
      - ${ocir_custom_image_repo_name}
      - ${private_fss_subnet}
      - ${mode}
      - ${log_level}
      - ${logs_dir}
      - ${wls_node_pool_image_id}
      - ${non_wls_node_pool_image_id}
      - ${node_pool_image_map}
      - ${node_pool_count}
      - ${node_pool_single_ad}
      - ${create_nat_gateway}
      - ${nat_gateway_name}
      - ${service_gateway_name}
      - ${create_service_gateway}
      - ${mp_bastion_listing_resource_version}
      - ${mp_bastion_listing_id}
      - ${mp_admin_listing_resource_version}
      - ${mp_admin_listing_id}
      - ${mp_wls_node_pool_listing_resource_version}
      - ${mp_wls_node_pool_listing_id}
      - ${wls_edition}
      - ${wls_configured_ms_count}
      - ${wls_version}
      - ${enable_log_home_on_pv}
      - ${worker_mode}
      - ${existing_cluster_id}
      - ${node_pools}
      - ${node_pool_name_suffix}
      - ${allow_node_port_access}
      - ${allow_worker_ssh_access}
      - ${ingress_namespace}
      - ${ingress_replica_count}
      - ${ingress_pull_secret}
      - ${ingress_private_lb}
      - ${ingress_enable_http_port}
      - ${ingress_http_port}
      - ${ingress_enable_https_port}
      - ${ingress_http_port}
      - ${ingress_https_port}
      - ${jenkins_master_version}
      - ${jenkins_namespace}
      - ${jenkins_replica_count}
      - ${jenkins_pull_secret}
      - ${jenkins_name}
      - ${jenkins_container_port}
      - ${jenkins_service_port}
      - ${jenkins_service_nodeport}
      - ${jenkins_service_targetport}
      - ${jenkins_service_jnlpnodeport}
      - ${jenkins_service_jnlpport}
      - ${jenkins_service_jnlptargetport}
      - ${jenkins_proxy}
      - ${jenkins_servicename}
      - ${jenkins_cert_secret_mount_path}
      - ${kube_url}
      - ${jenkins_home}
      - ${jenkins_host_volume_mount_path}
      - ${expose_admin_t3_channel}
      - ${expose_admin_node_port}
      - ${wls_nm_port}
      - ${wls_admin_node_port}
      - ${wls_cluster_mc_port}
      - ${wls_extern_admin_port}
      - ${wls_extern_ssl_admin_port}
      - ${wls_ms_port}
      - ${wls_ms_ssl_port}
      - ${cluster_name}
      - ${dashboard_enabled}
      - ${ocir_region}
      - ${lb_http_port}
      - ${lb_https_port}
      - ${is_lb_private}
      - ${deploy_sample_app}
      - ${cpu_request_per_ms_pod}
      - ${dev_tenancy_proxy}
      - ${is_clair_scan_enabled}
      - ${wls_admin_ssl_port}


outputs:
  admin_instance_id:
    type: ocid
    title: Admin Instance Id
  admin_instance_private_ip:
    type: csv
    title: Admin Instance Private IP
  bastion_instance_id:
    type: ocid
    title: Bastion Instance Id
  bastion_instance_public_ip:
    type: csv
    title: Bastion Instance Public IP
  oke_cluster_id:
    type: ocid
    title: Kubernetes Container Cluster Id
  oke_cluster_name:
    type: link
    title: Kubernetes Container Cluster Name
  oke_cluster_version:
    type: link
    title: Kubernetes Container Cluster Version

variables:
  # WLS OKE Instance Configuration
  tenancy_ocid:
    type: string
    title: Tenancy ID
    description: The Oracle Cloud Identifier (OCID) for your tenancy
    required: true

  compartment_ocid:
    type: oci:identity:compartment:id
    title: WebLogic Server Compartment
    description: The compartment in which to create the WebLogic Server compute instances
    required: true

  region:
    type: oci:identity:region:name
    title: Region
    description: The region in which to create all resources
    required: true

  resource_prefix:
    visible: ${orm_create_mode}
    type: string
    minLength: 1
    maxLength: 8
    pattern: "^[a-z][a-z0-9]{0,7}$"
    title: Resource Name Prefix
    description: The names of all compute and network resources will begin with this prefix. It can only contain lowercase letters or numbers and must begin with a letter.
    required: true

  ssh_public_key:
    visible: ${orm_create_mode}
    type: oci:core:ssh:publickey
    title: SSH Public Key
    description: Use the corresponding private key to access the compute instances and the nodes in the Kubernetes cluster
    required: true

  bastion_shape:
    visible: ${orm_create_mode}
    type: oci:core:instanceshape:name
    title: Bastion Instance Shape
    description: The shape of the bastion compute instance
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}
      imageId: ${bastion_image_id}

  admin_image_id:
    visible: ${orm_create_mode}
    type: string
    required: true
    title: Administration Instance Image OCID
    description: The Oracle Cloud Identifier (OCID) of the image to be used for Administration Compute Instance
    dependsOn:
      compartmentId: ${compartment_ocid}

  admin_shape:
    visible: ${orm_create_mode}
    type: oci:core:instanceshape:name
    title:  Administration Instance Compute Shape
    description: The shape of the compute instance that you use to administer the Kubernetes cluster
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}
      imageId: ${admin_image_id}

  admin_availability_domain:
    visible: ${orm_create_mode}
    type: oci:identity:availabilitydomain:name
    title: Availability Domain for compute instances
    description: The name of the availability domain in which to create the bastion and administration compute instances
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}

  assign_admin_public_ip:
    type: boolean
    default: true
    title: Assign Public IP Addresses to Cluster Administration Instance
    description: If not selected, the Cluster Administration Instance is created in a new private subnet.

  bastion_image_id:
    type: string
    title: Bastion Instance Image OCID
    description: The Oracle Cloud Identifier (OCID) for PIC image

  mp_bastion_listing_id:
    type: string
    title: Bastion Marketplace listing Id
    description: The Bastion Marketplace listing Id for PIC image

  mp_bastion_listing_resource_version:
    type: string
    title: Bastion Marketplace listing version
    description: The Bastion Marketplace listing version for PIC image

  mp_wls_node_pool_image_id:
    type: string
    title: Nodepool Instance Image OCID
    description: The Oracle Cloud Identifier (OCID) for PIC image

  mp_wls_node_pool_listing_id:
    type: string
    title: Nodepool Marketplace listing Id
    description: The Nodepool Marketplace listing Id for PIC image

  mp_wls_node_pool_listing_resource_version:
    type: string
    title: Nodepool Marketplace listing version
    description: The Nodepool Marketplace listing version for PIC image

  ocir_region:
    type: string
    title: Region for repository (ocir)
    description: The Region for repository(ocir)

  ocir_user:
    visible: ${orm_create_mode}
    type: string
    title: Registry User Name
    description: The user name that Kubernetes uses to access the Docker image registry
    required: true

  ocir_auth_token_ocid:
    visible: ${orm_create_mode}
    type: string
    title: Secrets OCID for Registry Authentication Token
    description: The secrets OCID which contain the auth token that you generated for the user to access the image registry
    pattern: ^ocid1.vaultsecret.*$
    required: true

  is_clair_scan_enabled:
    type: boolean
    default: false
    title: Scan Image
    description: Enable domain image scan for security vulnerabilities. Ensure we have public internet access for image scan to work from admin host.

  fss_availability_domain:
    visible: ${orm_create_mode}
    type: oci:identity:availabilitydomain:name
    title: Availability Domain for File system
    description: The name of the availability domain in which to create the file system and mount target
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}

  mountTarget_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: string
    title: Existing File system mount target Id
    description: The Oracle Cloud Identifier (OCID) for your existing mount target. The existng mount target has to be in the same subnet in which new File system will be created.
    pattern: ^ocid1.mounttarget.*$

  mountTarget_compartment_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: oci:identity:compartment:id
    title: Compartment for File system mount target Id
    description: The Compartment for the existing File System Mount Target.

  wls_admin_user:
    visible: ${orm_create_mode}
    type: string
    title: Administration User Name
    description: The name of the administrator in the WebLogic Server domain
    pattern: "^[a-zA-Z][a-zA-Z0-9]{7,127}$"
    minLength: 8
    maxLength: 128
    required: true

  wls_admin_password_ocid:
    visible: ${orm_create_mode}
    type: string
    title:  Secrets OCID for Administration Password
    description: The OCID of the secret that contains the password for the administrator in the WebLogic Server domain. Use a WebLogic Administrator password that starts with a letter, is between 8 and 30 characters long, contains at least one number, and, optionally, any number of the special characters ($#_). For example, Ach1z0#d.
    pattern: ^ocid1.vaultsecret.*$
    required: true

  wls_ms_replica_count:
    visible: ${orm_create_mode}
    type: integer
    title: Managed Server Count
    description: The initial number of WebLogic Server pods in the Kubernetes cluster, and also the number of managed servers in the domain. The maximum is 9.
    minimum: 1
    maximum: 9
    multipleOf: 1
    default: 2
    required: true

  use_advanced_wls_instance_config:
    visible: ${orm_create_mode}
    type: boolean
    default: false
    title: WebLogic Instance Advanced Configuration

  wls_domain_name:
    visible:
      and:
        - ${orm_create_mode}
        - ${use_advanced_wls_instance_config}
    type: string
    minLength: 1
    maxLength: 30
    pattern: "^[a-zA-Z][a-zA-Z0-9_-]{0,29}$"
    title: WebLogic Domain Name
    description: The name of WebLogic domain

  wls_nm_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 5556
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Server Node Manager Port
    description: The listen port number for the node manager process on all compute instances
    required: true

  wls_admin_port:
    visible:
      and:
        - ${orm_create_mode}
        - ${use_advanced_wls_instance_config}
    type: integer
    default: 7001
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Server Admin Console Port
    description: The administration server port on which to access the administration console
    required: true

  wls_admin_ssl_port:
    visible:
      and:
        - ${orm_create_mode}
        - ${use_advanced_wls_instance_config}
    type: integer
    default: 7002
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Server Admin Console SSL Port
    description: The administration server SSL port on which to access the administration console
    required: true

  wls_admin_node_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 30701
    minimum: 30000
    maximum: 32767
    multipleOf: 1
    title: WebLogic Server Admin Node Port
    description: The WebLogic Server administrative node port
    required: true

  wls_cluster_mc_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 5555
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Cluster Port
    description: The managed server port on which to send heartbeats and other internal cluster traffic
    required: true

  wls_extern_admin_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 30012
    minimum: 30000
    maximum: 32767
    multipleOf: 1
    title: WebLogic Server External Admin Port
    description: The server port on which to send administration traffic
    required: true

  wls_extern_ssl_admin_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 30013
    minimum: 30000
    maximum: 32767
    multipleOf: 1
    title: WebLogic Server External Admin SSL Port
    description: The server SSL port on which to send administration traffic
    required: true

  wls_ms_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 8001
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Managed Server Port
    description: The managed server port on which to send application traffic
    required: true

  wls_ms_ssl_port:
    visible: ${use_advanced_wls_instance_config}
    type: integer
    default: 8002
    minimum: 1024
    maximum: 65535
    multipleOf: 1
    title: WebLogic Managed Server SSL Port
    description: The managed server port on which to send application traffic
    required: true

  deploy_sample_app:
    visible: ${use_advanced_wls_instance_config}
    type: boolean
    default: true
    title: Deploy Sample Application
    description: Deploy an application named sample-app to the WebLogic cluster.

  expose_admin_t3_channel:
    visible: ${use_advanced_wls_instance_config}
    type: boolean
    default: false
    title: Enable WebLogic t3 channel as service on kubernetes cluster

  expose_admin_node_port:
    visible: ${use_advanced_wls_instance_config}
    type: boolean
    default: false
    title: Enable WebLogic admin node port

  cluster_name:
    type: string
    minLength: 1
    maxLength: 16
    pattern: "^[a-zA-Z][a-zA-Z0-9]{0,16}$"
    title: Kubernetes Cluster Name Suffix
    description: The name of the OKE cluster will end with this suffix. It can only contain letters or numbers and must begin with a letter
    required: true

  wls_node_pool_shape:
    type: oci:core:instanceshape:name
    title: WebLogic Node Pool Shape
    description: The number of CPUs and the amount of memory allocated to each node in the node pool for WebLogic pods in Kubernetes Cluster. When provisioning more than 2 managed server pods, select a shape with more than 2 OCPUs.
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}

  wls_node_pool_count:
    type: integer
    default: 1
    minimum: 1
    multipleOf: 1
    title: Nodes in the Node Pool for WebLogic pods
    description: Number of nodes in the node pool for WebLogic pods in Kubernetes Cluster.
    required: true

  non_wls_node_pool_shape:
    type: oci:core:instanceshape:name
    title: Non-WebLogic Node Pool Shape
    description: The number of CPUs and the amount of memory allocated to each node in the node pool for non-WebLogic pods (like CI/CD pods).
    required: true
    dependsOn:
      compartmentId: ${compartment_ocid}

  non_wls_node_pool_count:
    type: integer
    default: 1
    minimum: 1
    multipleOf: 1
    title: Nodes in the Node Pool for non-WebLogic pods
    description: Number of nodes in the node pool for non-WebLogic pods (like CI/CD pods) in Kubernetes Cluster.
    required: true

  pods_cidr:
    visible: ${orm_create_mode}
    type: string
    default: 10.244.0.0/16
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    title: PODs CIDR
    description: The CIDR range used for the IP addresses of your pods. A /16 CIDR is generally sufficient. This CIDR should not overlap with any subnet range in the VCN, or the CIDR should be outside of the VCN CIDR range.

  services_cidr:
    visible: ${orm_create_mode}
    type: string
    default: 10.96.0.0/16
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    title: Services CIDR
    description: The CIDR range used for the IP addresses of exposed Kubernetes services (ClusterIPs). This CIDR should not overlap with the VCN CIDR range.

  dashboard_enabled:
    type: boolean
    default: false
    title: Enable Kubernetes dashboard

  kubernetes_version:
    visible: ${orm_create_mode}
    type: enum
    title: Kubernetes version
    description: The version of Kubernetes to use
    enum:
      - v1.16.8
      - v1.17.9
    default: v1.17.9

  #kms
  use_encryption:
    visible: ${orm_create_mode}
    type: boolean
    title: Kubernetes secret encryption
    description: Enable encryption by using the master encryption key in Vault. If you do not select this option, the standard block storage encryption is used for etcd read/write and Kubernetes secrets at rest in etcd are not encrypted.
    default: false

  vault_key_ocid:
    visible:
      and:
        - ${orm_create_mode}
        - ${use_encryption}
    type: String
    default: ""
    title: Vault Key OCID
    description: Key OCID for Kubernetes secret encryption
    required: true
    pattern: ^ocid1.key.*$

  #Networking
  network_compartment_id:
    visible: ${orm_create_mode}
    type: oci:identity:compartment:id
    title: Network Compartment
    description: The compartment where you want to create the network resources such as Virtual Cloud Network, security lists, route tables and gateways
    required: false
    default: ${compartment_ocid}

#  use_existing_vcn:
#    type: boolean
#    title: Choose existing_vcn
#    description: Create or use existing VCN
#    default: false

  vcn_strategy:
    visible: ${orm_create_mode}
    type: enum
    title: Virtual Cloud Network Strategy
    description: Create a new Virtual Cloud Network (VCN) for the Kubernetes cluster, compute instances, and load balancers, or use an existing VCN. You must use an existing VCN if you want to use a DB System.
    enum:
      - "Create New VCN"
      - "Use Existing VCN"
    required: true
    default: "Use Existing VCN"

  vcn_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Create New VCN"
    type: string
    default: 10.0.0.0/16
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    title: WebLogic Server Network CIDR
    description: The CIDR to assign to the new Virtual Cloud Network (VCN) for the Kubernetes cluster, compute instances, and load balancers

  existing_vcn_id:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Use Existing VCN"
    type: oci:core:vcn:id
    dependsOn:
      compartmentId: ${network_compartment_id}
    required: true
    default: ''
    title: Existing Network
    description: An existing Virtual Cloud Network (VCN) in which to create the compute instances, network resources, and load balancers. If not specified, a new VCN is created.

  use_existing_subnets:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Use Existing VCN"
    type: boolean
    title: Use existing subnet
    description: Select if you are use existing subnets
    default: false

  bastion_subnet_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - not:
                - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: string
    default: 10.0.1.0/28
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    required: true
    title: Bastion Host Subnet CIDR
    description: The CIDR of the new public subnet for the bastion compute instance. The new subnet's CIDR should not overlap with any other subnet CIDRs.

  existing_bastion_subnet_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:core:subnet:id
    dependsOn:
      vcnId: ${existing_vcn_id}
      compartmentId: ${network_compartment_id}
      hidePrivateSubnet: true
      hidePublicSubnet: false
    default: ''
    required: true
    title: Existing Subnet for Bastion Host
    description: An existing public subnet to use for a Bastion compute instance. This subnet must already be present in the chosen VCN

  admin_subnet_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - not:
                - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: string
    default: 10.0.2.0/28
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    required: true
    title: Administration Host Subnet CIDR
    description: The CIDR of the new private subnet for the compute instance that you use to administer the Kubernetes cluster. The new subnet's CIDR should not overlap with any other subnet CIDRs.

  existing_admin_subnet_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:core:subnet:id
    dependsOn:
      vcnId: ${existing_vcn_id}
      compartmentId: ${network_compartment_id}
      hidePrivateSubnet: false
      hidePublicSubnet: true
    default: ''
    required: true
    title: Existing Subnet for Cluster Administration Host
    description: An existing private subnet to use for a Cluster Administration Host compute instance. This subnet must already be present in the chosen VCN.

  fss_subnet_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - not:
                - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: string
    default: 10.0.3.0/28
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    required: true
    title: File System and Mount Target Subnet CIDR
    description: The CIDR of the new private subnet for the file system and mount target. The new subnet's CIDR should not overlap with any other subnet CIDRs.

  existing_fss_subnet_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:core:subnet:id
    dependsOn:
      vcnId: ${existing_vcn_id}
      compartmentId: ${network_compartment_id}
      hidePrivateSubnet: false
      hidePublicSubnet: true
    default: ''
    required: true
    title: Existing File System Subnet
    description: An existing private subnet to create file system and mount target. This subnet must already be present in the chosen VCN.

  oke_workers_subnet_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - not:
                - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: string
    default: 10.0.4.0/28
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    required: true
    title: Kubernetes Cluster Subnet CIDR
    description: The CIDR of the new private subnet for the Kubernetes cluster and node pool. The new subnet's CIDR should not overlap with any other subnet CIDRs.

  existing_oke_workers_subnet_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:core:subnet:id
    dependsOn:
      vcnId: ${existing_vcn_id}
      compartmentId: ${network_compartment_id}
      hidePrivateSubnet: false
      hidePublicSubnet: true
    default: ''
    required: true
    title: Existing Kubernetes Cluster Subnet
    description: An existing private subnet to create  Kubernetes Cluster and Node Pool. This subnet must already be present in the chosen VCN.

  lb_subnet_cidr:
    visible:
      and:
        - ${orm_create_mode}
        - and:
            - not:
                - ${use_existing_subnets}
            - eq:
                - ${vcn_strategy}
                - "Use Existing VCN"
    type: string
    default: 10.0.5.0/28
    pattern: "^(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\/(3[0-2]|[1-2]?[0-9])$"
    required: true
    title: Load Balancer Subnet CIDR
    description: The CIDR of the new public subnet for the load balancers. The new subnet's CIDR should not overlap with any other subnet CIDRs.

  existing_lb_subnet_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - ${use_existing_subnets}
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:core:subnet:id
    dependsOn:
      vcnId: ${existing_vcn_id}
      compartmentId: ${network_compartment_id}
      hidePrivateSubnet: true
      hidePublicSubnet: false
    default: 10.0.3.0/24
    required: true
    title: Load Balancer Subnet Id
    description: An existing public subnet to create Load Balancer. This subnet must already be present in the chosen VCN.

  existing_nat_gw_id:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Use Existing VCN"
    type: String
    default: ""
    title: Existing NAT Gateway Id
    description: The Oracle Cloud Identifier (OCID) for your existing NAT gateway. Either NAT gateway or Service gateway is required if you are using existing Virtual Cloud Network.
    pattern: ^$|^ocid1.natgateway.*$

  existing_service_gw_id:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Use Existing VCN"
    type: String
    default: ""
    title: Existing Service Gateway Id
    description: The Oracle Cloud Identifier (OCID) for your existing Service gateway. Either NAT gateway or Service gateway is required if you are using existing Virtual Cloud Network.
    pattern: ^$|^ocid1.servicegateway.*$

  ingress_lb_shape:
    visible: ${orm_create_mode}
    type: enum
    title: Administration Console Load balancer Shape
    description: The shape of the private load balancer that you use to access the WebLogic Server and Jenkins administration consoles
    enum:
      - 100Mbps
      - 400Mbps
      - 8000Mbps
    default: 100Mbps
    required: true

  lb_shape:
    visible: ${orm_create_mode}
    type: enum
    title: WebLogic Cluster Load balancer Shape
    description: The shape of the public load balancer that you use to access applications in the WebLogic cluster
    enum:
      - 100Mbps
      - 400Mbps
      - 8000Mbps
    default: 400Mbps
    required: true

  #Jenkins
  jenkins_container_port:
    type: integer
    default: 8080
    minimum: 1
    maximum: 65535
    multipleOf: 1
    title: Jenkins Container Port
    description: The Jenkins container port number
    required: true

  jenkins_service_port:
    type: integer
    default: 8080
    minimum: 1
    maximum: 65535
    multipleOf: 1
    title: Jenkins Service Port
    description: The Jenkins service port number
    required: true

  jenkins_service_nodeport:
    type: integer
    default: 31125
    minimum: 30000
    maximum: 32767
    multipleOf: 1
    title: Jenkins Service NodePort
    description: The Jenkins service NodePort
    required: true

  jenkins_service_targetport:
    type: integer
    default: 8080
    minimum: 1
    maximum: 65535
    multipleOf: 1
    title: Jenkins Service Target Port
    description: The Jenkins service target port
    required: true

  jenkins_service_jnlpport:
    type: integer
    default: 50000
    minimum: 30000
    maximum: 80000
    multipleOf: 1
    title: Jenkins Service JNLP Port
    description: The Jenkins service JNLP Port
    required: true

  jenkins_service_jnlpnodeport:
    type: integer
    default: 32554
    minimum: 30000
    maximum: 32767
    multipleOf: 1
    title: Jenkins Service JNLP NodePort
    description: The Jenkins service JNLP NodePort
    required: true

  jenkins_service_jnlptargetport:
    type: integer
    default: 8080
    minimum: 1
    maximum: 65535
    multipleOf: 1
    title: Jenkins Service Target Port
    description: The Jenkins service target port
    required: true

  #JRF checkbox
  add_JRF:
    visible: ${orm_create_mode}
    type: boolean
    default: false
    title: Provision with JRF
    description: Deploy the Java Required Files (JRF) components and create the JRF schemas on the selected database

  # DB Type Selection
  db_strategy_existing_vcn:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Use Existing VCN"
    type: enum
    title: Database Strategy
    description: The database strategy for WebLogic Server. If you select a database, the domain is JRF-enabled and the JRF schema is created in the database.
    enum:
      - "Autonomous Transaction Processing Database"
      - "Database System"
    required: true

  db_strategy_new_vcn:
    visible:
      and:
        - ${orm_create_mode}
        - eq:
          - ${vcn_strategy}
          - "Create New VCN"
    type: enum
    title: Database Strategy
    description:  The database strategy for WebLogic Server. If you select a database, the domain is JRF-enabled and the JRF schema is created in the database.
    enum:
      - "Autonomous Transaction Processing Database"
    required: true

  # ATP DB Configuration
  atp_db_compartment_id:
    visible:
      and:
        - ${orm_create_mode}
        - or:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Autonomous Transaction Processing Database"
          - eq:
              - ${db_strategy_new_vcn}
              - "Autonomous Transaction Processing Database"
    type: oci:identity:compartment:id
    required: true
    title: Autonomous Database Compartment
    description: The compartment in which the autonomous database is found

  atp_db_id:
    visible:
      and:
        - ${orm_create_mode}
        - or:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Autonomous Transaction Processing Database"
          - eq:
              - ${db_strategy_new_vcn}
              - "Autonomous Transaction Processing Database"
    type: oci:database:autonomousdatabase:id
    dependsOn:
      compartmentId: ${atp_db_compartment_id}
    required: true
    title: Autonomous Database
    description: The Autonomous Transaction Processing (ATP) database in which to provision the schemas for a JRF-enabled WebLogic Server domain

  atp_db_password_ocid:
    visible:
      and:
        - ${orm_create_mode}
        - or:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Autonomous Transaction Processing Database"
          - eq:
              - ${db_strategy_new_vcn}
              - "Autonomous Transaction Processing Database"
    type: string
    required: true
    title: Secrets OCID for Autonomous Database ADMIN Password
    description: The secrets OCID that has the password for the ADMIN user in the autonomous database
    pattern: ^ocid1.vaultsecret.*$

  atp_db_level:
    visible:
      and:
        - ${orm_create_mode}
        - or:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Autonomous Transaction Processing Database"
          - eq:
              - ${db_strategy_new_vcn}
              - "Autonomous Transaction Processing Database"
    type: enum
    enum:
      - low
      - tp
      - tpurgent
    default: low
    title: Autonomous Database Service Level
    description: The service level that the WebLogic Server domain should use to connect to the autonomous database. The default is low.

  # OCI DB Configuration
#  ocidb_network_compartment_id:
#    visible:
#      and:
#        - eq:
#            - ${db_strategy_existing_vcn}
#            - "Database System"
#        - eq:
#            - ${vcn_strategy}
#            - "Use Existing VCN"
#    type: oci:identity:compartment:id
#    required: true
#    title: DB System Virtual Cloud Network Compartment
#    description: The compartment in which the DB System Virtual Cloud Network is found
#    default: ${compartment_ocid}
#
#  ocidb_existing_vcn_id:
#    visible:
#      and:
#        - eq:
#            - ${db_strategy_existing_vcn}
#            - "Database System"
#        - eq:
#            - ${vcn_strategy}
#            - "Use Existing VCN"
#    type: oci:core:vcn:id
#    dependsOn:
#      compartmentId: ${ocidb_network_compartment_id}
#    required: true
#    default: ''
#    title: DB System Network
#    description: An existing VCN used by DB System. This must be the same as the VCN used for the Kubernetes cluster.

  ocidb_compartment_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:identity:compartment:id
    required: true
    title: DB System Compartment
    description: The compartment in which the DB System is found
    default: ${compartment_ocid}

  ocidb_dbsystem_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:database:dbsystem:id
    dependsOn:
      compartmentId: ${ocidb_compartment_id}
    required: true
    title: DB System
    description: The Oracle Cloud Infrastructure DB System to use for this WebLogic Server domain. The DB System VCN should be same as selected WebLogic Server VCN.

  ocidb_dbhome_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:database:dbhome:id
    required: true
    title: Database home in the DB System
    description: The database home within the DB System
    dependsOn:
      compartmentId: ${ocidb_compartment_id}
      dbSystemId: ${ocidb_dbsystem_id}

  ocidb_dbhome_major_version:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:database:dbhome:dbversion
    title: Version of Database home in the DB System
    description: The version of database home within the DB System
    dependsOn:
      dbHomeId: ${ocidb_dbhome_id}

  ocidb_database_id:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: oci:database:database:id
    dependsOn:
      compartmentId: ${ocidb_compartment_id}
      dbHomeId: ${ocidb_dbhome_id}
    required: true
    title: Database in the DB System
    description: The database within the DB System in which to provision the schemas for a JRF-enabled WebLogic Server domain

  ocidb_pdb_service_name:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - not:
              - eq:
                  - ${ocidb_dbhome_major_version}
                  - "11"
          - and:
              - eq:
                  - ${db_strategy_existing_vcn}
                  - "Database System"
              - eq:
                  - ${vcn_strategy}
                  - "Use Existing VCN"
    type: string
    required: true
    title: PDB
    description: The name of the pluggable database (PDB) in which to provision the schemas for a JRF-enabled WebLogic Server domain. This is required for Oracle Database 12c or later.

  oci_db_user:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: string
    default: SYS
    pattern: "^[a-zA-Z][a-zA-Z0-9]{1,49}$"
    minLength: 2
    maxLength: 50
    title: Database Administrator
    description: The name of a database user with database administrator (DBA) privileges
    required: true

  db_port:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: integer
    default: 1521
    title: Database Listener Port
    description: The Listener Port for the Database
    required: false

  oci_db_password_ocid:
    visible:
      and:
        - ${orm_create_mode}
        - and:
          - eq:
              - ${db_strategy_existing_vcn}
              - "Database System"
          - eq:
              - ${vcn_strategy}
              - "Use Existing VCN"
    type: string
    required: true
    title: Secrets OCID for Database Administrator Password
    description: The Secrets OCID that contains password for the database administrator
    pattern: ^ocid1.vaultsecret.*$

  create_policies:
    visible: ${orm_create_mode}
    type: boolean
    title: OCI Policies
    description: Create policies to read Secrets from Vault and manage Autonomous Transaction Processing Database (if applicable). Deselecting this option is for Advanced users only.
    required: false
    default: true
